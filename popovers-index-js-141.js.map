{"version":3,"sources":["webpack://popovers/./src/components/popovers/index.js","webpack://popovers/./src/pages/popovers/index.js"],"names":["Popover","constructor","event","element","target","closest","console","log","activePopover","activeTarget","isEqualNode","remove","this","render","dataset","popover","positionPopover","moveTooltip","document","removeEventListener","onPointerMove","instance","initialize","initEventListeners","addEventListener","onClick","html","dataArr","split","createElement","className","innerHTML","body","append","coords","getBoundingClientRect","left","window","scrollX","width","top","offsetHeight","style","destroy","Page","getTemplate","firstElementChild","subElements","getSubElements","initComponents","elements","querySelectorAll","item","component","Object","values","components"],"mappings":"wPAAe,MAAMA,EAoCjBC,cACI,GADU,0CA9BJC,IACN,MAAMC,EAAUD,EAAME,OAAOC,QAAQ,kBAIrC,GAFAC,QAAQC,IAAIJ,GAEPH,EAAQQ,eAAiBR,EAAQS,aAAaC,YAAYP,IAAcH,EAAQQ,gBAAkBL,EAGnG,OAFAH,EAAQQ,cAAcG,cACtBX,EAAQQ,cAAgB,MAKxBL,IACAS,KAAKC,OAAOV,EAAQW,QAAQC,SAC5BH,KAAKI,gBAAgBb,GAErBH,EAAQS,aAAeN,KAcjB,uBATED,IACZU,KAAKK,YAAYf,KAQP,sBALC,KACXU,KAAKD,SACLO,SAASC,oBAAoB,cAAeP,KAAKQ,iBAI7CpB,EAAQqB,SACR,OAAOrB,EAAQqB,SAGnBrB,EAAQqB,SAAWT,KAGvBU,aACIV,KAAKW,qBAGTA,qBACIL,SAASM,iBAAiB,QAASZ,KAAKa,SAG5CZ,OAAOa,GACH,MAAMC,EAAUD,EAAKE,MAAM,KAE3BhB,KAAKT,QAAUe,SAASW,cAAc,OACtCjB,KAAKT,QAAQ2B,UAAY,UACzBlB,KAAKT,QAAQ4B,UAAa,+BAA8BJ,EAAQ,mDAChCA,EAAQ,WACxCT,SAASc,KAAKC,OAAOrB,KAAKT,SAE1BH,EAAQQ,cAAgBI,KAG5BI,gBAAgBZ,GACZ,MAAM8B,EAAS9B,EAAO+B,wBAChBC,EAAOF,EAAOE,KAAOC,OAAOC,QAAUJ,EAAOK,MAAQ,EACrDC,EAAMN,EAAOM,IAAM5B,KAAKT,QAAQsC,aAAe,EAErD7B,KAAKT,QAAQuC,MAAMN,KAAUA,EAAF,KAC3BxB,KAAKT,QAAQuC,MAAMF,IAASA,EAAF,KAG9B7B,SACQC,KAAKT,SACLS,KAAKT,QAAQQ,SAIrBgC,UACIzB,SAASC,oBAAoB,QAASP,KAAKa,SAC3Cb,KAAKD,SACLC,KAAKT,QAAU,M,0HAlFFH,qB,EAAAA,0B,EAAAA,yBCEN,MAAM4C,EAKjB3C,cAAc,qBAJA,IAIA,oBAHD,IAObY,SAEI,MAAMV,EAAUe,SAASW,cAAc,OAQvC,OAPA1B,EAAQ4B,UAAYnB,KAAKiC,cAEzBjC,KAAKT,QAAUA,EAAQ2C,kBAEvBlC,KAAKmC,YAAcnC,KAAKoC,iBACxBpC,KAAKqC,iBAEErC,KAAKT,QAIhB8C,kBACoB,IAAIjD,GACZsB,aAIZ0B,iBACI,MAAME,EAAWtC,KAAKT,QAAQgD,iBAAiB,kBAC/C,IAAK,MAAMC,KAAQF,EACftC,KAAKmC,YAAYK,EAAKtC,QAAQX,SAAWiD,EAE7C,OAAOxC,KAAKmC,YAIhBpC,SACQC,KAAKT,SACLS,KAAKT,QAAQQ,SAIrBgC,UACI/B,KAAKD,SACLC,KAAKT,QAAU,KACfS,KAAKmC,YAAc,KAGnB,IAAK,MAAMM,KAAaC,OAAOC,OAAO3C,KAAK4C,YACvCH,EAAUV,UAKlBE,cACI,MAAQ","file":"popovers-index-js-141.js","sourcesContent":["export default class Popover {\n    static instance;\n    static activePopover;\n    static activeTarget;\n    element;\n\n    onClick = event => {\n        const element = event.target.closest('[data-popover]');\n\n        console.log(element);\n\n        if ((Popover.activePopover && Popover.activeTarget.isEqualNode(element)) || (Popover.activePopover && !element)) {\n            Popover.activePopover.remove()\n            Popover.activePopover = null;\n            return;\n        }\n\n\n        if (element) {\n            this.render(element.dataset.popover);\n            this.positionPopover(element);\n\n            Popover.activeTarget = element;\n            // document.addEventListener('pointermove', this.onPointerMove);\n        }\n    };\n\n    onPointerMove = event => {\n        this.moveTooltip(event);\n    };\n\n    onPointerOut = () => {\n        this.remove();\n        document.removeEventListener('pointermove', this.onPointerMove);\n    };\n\n    constructor() {\n        if (Popover.instance) {\n            return Popover.instance;\n        }\n\n        Popover.instance = this;\n    }\n\n    initialize() {\n        this.initEventListeners();\n    }\n\n    initEventListeners() {\n        document.addEventListener('click', this.onClick);\n    }\n\n    render(html) {\n        const dataArr = html.split(';')\n\n        this.element = document.createElement('div');\n        this.element.className = 'popover';\n        this.element.innerHTML = `<div class=\"tooltip__title\">${dataArr[0]}</div>\n        <div class=\"tooltip__content\">${dataArr[1]}</div>`;\n        document.body.append(this.element);\n\n        Popover.activePopover = this;\n    }\n\n    positionPopover(target) {\n        const coords = target.getBoundingClientRect();\n        const left = coords.left + window.scrollX + coords.width / 2;\n        const top = coords.top - this.element.offsetHeight - 7;\n\n        this.element.style.left = `${left}px`;\n        this.element.style.top = `${top}px`;\n    }\n\n    remove() {\n        if (this.element) {\n            this.element.remove();\n        }\n    }\n\n    destroy() {\n        document.removeEventListener('click', this.onClick);\n        this.remove();\n        this.element = null;\n    }\n}\n\n\n\n","import Popover from \"../../components/popovers\";\n\nexport default class Page {\n    subElements = {};\n    components = {};\n\n\n    constructor() {\n    }\n\n\n    render() {\n\n        const element = document.createElement('div');\n        element.innerHTML = this.getTemplate();\n\n        this.element = element.firstElementChild;\n\n        this.subElements = this.getSubElements();\n        this.initComponents();\n\n        return this.element;\n    }\n\n\n    initComponents() {\n        const popover = new Popover()\n        popover.initialize();\n    }\n\n\n    getSubElements() {\n        const elements = this.element.querySelectorAll('[data-element]')\n        for (const item of elements) {\n            this.subElements[item.dataset.element] = item;\n        }\n        return this.subElements;\n    }\n\n\n    remove() {\n        if (this.element) {\n            this.element.remove()\n        }\n    }\n\n    destroy() {\n        this.remove();\n        this.element = null;\n        this.subElements = null;\n\n\n        for (const component of Object.values(this.components)) {\n            component.destroy();\n        }\n    }\n\n\n    getTemplate() {\n        return `\n        <div data-element=\"content\">\n        <button class=\"button button_primary popover__button\" \n        data-popover=\"Popover title; And heres some amaizing content. Its very engaging. Right?\">\n        Click to toggle popover\n     </button>\n    </div>\n        `\n    }\n}"],"sourceRoot":""}